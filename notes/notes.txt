--- EXPRESS ---

Link formatter (kebab-case) library: lodash

To pass information to a page: 
app.post (/origin) {redirect /destination}
app.get (/destination) {render => pass desired key:values}

- Dynamic routes:
app.get('/:paramName', (req, res) => {
    let route = _.kebabCase(req.params.paramName);
    if (route == 'work') {
        res.render('list', { listTitle: "Work List", newListItems: workItems });
        
    } else if (route == 'about') {
        res.render('about');
    }
});

--- MONGO DB ---
create database: use <DB_NAME>
show databases: show dbs
create collection: db.<COLLECTION_NAME>
show collections: show collections
delete collection: db.<COLLECTION_NAME>.drop()
insert data into collection: db.<COLLECTION_NAME>.insertOne({<KEYS_VALUES>})
show all data: db.<COLLECTION_NAME>.find()
show query data: db.<COLLECTION_NAME>.find(<QUERY>)
add column: db.products.updateOne({<QUERY>}, {$set: {<COLUMN>: <VALUE>}})
delete database: db.dropDatabase()

To stop server service: sudo pkill -f mongod
To start mongo server service: mongod

- Validation
const fruitSchema = new Schema({
    name: {
        type: String,
        required: [true, `Don't have ideas?`]
    },
    rating: {
        type: Number,
        min: [1, 'At least one star please'],
        max: [10, '{VALUE} is to much love!']
    },
    review: String
});

apple.save().then(result => {
    log(result);
}).catch(err => {
    log(err.message);
});


--- Promises, async & callbacks ---

.put(async (req, res) => {
		try {
			const result = await Article.replaceOne({ title: req.params.article }, { title: req.body.title, content: req.body.content });
			if (result.modifiedCount < 1) {
				res.send('No changed documents')
			} else {
				res.send("Succesfully changed the selected article")
			}
		} catch (err) { res.send(err) }
	})
.patch((req, res) => {
	Article.updateOne({ title: req.params.article }, { $set: req.body }).then((result => {
		if (result.modifiedCount < 1) {
			res.send('Article not updated')
		} else {
			res.send('Succesfully updated')
		}
	})).catch((error) => {
		res.send(error)
	});
})
.delete((req, res) => {
	Article.findOneAndDelete({ title: req.params.article }).then(result => {
		res.send(result);
	}, err => {
		res.send(err);
	});
});

- Callbacks

Fruit.insertMany([apple, kiwi, orange, banana], (err) => {
    if (err) log(err);
    else log('Saved fruits');
});


--- HEROKU ---
